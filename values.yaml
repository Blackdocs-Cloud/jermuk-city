apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jermuk-city
    env: aws      
  name: jermuk-city
  namespace: jermuk-city
spec:
  selector:
    matchLabels:
      app: jermuk-city
  template:
    metadata:
      labels:
        app: jermuk-city
        env: aws         
    spec:       
      containers:
      - image: docker.io/blackdocs/jermuk-city:bd9c4139cb5d89c143ad58ef2ca4207b9fb3afe9
        name: jermuk-city
        imagePullPolicy: Always                
        resources: 
          requests:
            memory: "68Mi"
            cpu: "10m"
          limits:
            memory: "72Mi"
            cpu: "30m"                  
        ports:
          - containerPort: 8888
            name: http-svc   
        command:
          - uvicorn
        args:
          - main:app
          - '--host'
          - '0.0.0.0'
          - '--port'
          - '8888'  
        volumeMounts:
        - mountPath: /tmp
          name: tmp                    
        livenessProbe: 
          httpGet: 
            path: /api/healthz
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet: 
            path: /api/healthz
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /api/healthz
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 10    
      volumes:
      - name: tmp
        emptyDir: {}           
      terminationGracePeriodSeconds: 30

---

apiVersion: v1
kind: Service
metadata:
  name: jermuk-city-svc
  labels:
    app: jermuk-city  
    env: aws  
  namespace: jermuk-city    
spec:
  selector:
    app: jermuk-city
  ports:
  - name: http-svc
    protocol: TCP
    port: 8888
    targetPort: http-svc

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jermuk-city-ingress
  namespace: jermuk-city
  annotations:
    cert-manager.io/cluster-issuer: production
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: www.jermuk.city
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jermuk-city-svc
            port:
              number: 8888
  tls:
  - hosts:
      - "*.jermuk.city"
    secretName: jermuk.city           

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: jermuk-city-autoscale
  namespace: jermuk-city
  labels:
    app: jermuk-city
    env: aws  
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: jermuk-city
  minReplicas: 2
  maxReplicas: 6
  metrics:     
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 90
